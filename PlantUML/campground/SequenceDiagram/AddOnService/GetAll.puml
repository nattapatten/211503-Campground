@startuml Get Add-On Services

header Sample Add-On Services Sequence Diagram
footer Page %page% of %lastpage%
title "Get Add-On Services"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:addonservices" as routerAddOnServices
participant "<<middleware>>\n:Auth" as AuthMiddleware
participant "<<controllers>>\n:addonservices" as controllersAddOnServices
participant "<<model>>\n:AddOnService" as modelAddOnService
database "<<MongoDB>>\n:addonservicesDB" as AddOnServicesDatabase

client->server ++: req.get('/addonservices')
server->routerAddOnServices ++: app.use('/addonservices', addonservices)
routerAddOnServices -> AuthMiddleware ++: protect
AuthMiddleware -> controllersAddOnServices ++: getAddOnServices()

alt user is not admin
    controllersAddOnServices -> modelAddOnService ++: find({user: req.user.id})
    modelAddOnService -> AddOnServicesDatabase ++: find({user: req.user.id})
    AddOnServicesDatabase --> modelAddOnService --: filteredAddOnServices
    controllersAddOnServices->client --: response({ success: true, data: filteredAddOnServices })
else user is admin and specified campground
    controllersAddOnServices -> modelAddOnService ++: find({campground: req.params.campgroundId})
    modelAddOnService -> AddOnServicesDatabase ++: find({campground: req.params.campgroundId})
    AddOnServicesDatabase --> modelAddOnService --: campgroundSpecificAddOnServices
    controllersAddOnServices->client --: response({ success: true, data: campgroundSpecificAddOnServices })
else user is admin
    controllersAddOnServices -> modelAddOnService ++: find()
    modelAddOnService -> AddOnServicesDatabase ++: find()
    AddOnServicesDatabase --> modelAddOnService --: allAddOnServices
    controllersAddOnServices->client --: response({ success: true, data: allAddOnServices })
end

@enduml
